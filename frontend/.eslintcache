[{"/Users/Jake.Squier/blockBots/frontend/src/HomePage/HomePage.js":"1","/Users/Jake.Squier/blockBots/frontend/src/HomePage/components/index.js":"2","/Users/Jake.Squier/blockBots/frontend/src/HomePage/components/ProjectCard.jsx":"3","/Users/Jake.Squier/blockBots/frontend/src/HomePage/components/landArea.jsx":"4","/Users/Jake.Squier/blockBots/frontend/src/HomePage/components/header.jsx":"5","/Users/Jake.Squier/blockBots/frontend/src/HomePage/components/newProjectBtn.jsx":"6","/Users/Jake.Squier/blockBots/frontend/src/index.js":"7","/Users/Jake.Squier/blockBots/frontend/src/ProjectPage/components/ProjectArea.js":"8"},{"size":7273,"mtime":1607021577668,"results":"9","hashOfConfig":"10"},{"size":3797,"mtime":1607017098173,"results":"11","hashOfConfig":"10"},{"size":2054,"mtime":1607021599073,"results":"12","hashOfConfig":"10"},{"size":450,"mtime":1606990023381,"results":"13","hashOfConfig":"10"},{"size":16546,"mtime":1607021871206,"results":"14","hashOfConfig":"10"},{"size":783,"mtime":1606990032898,"results":"15","hashOfConfig":"10"},{"size":500,"mtime":1606961590166,"results":"16","hashOfConfig":"10"},{"size":3928,"mtime":1607006656856,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"13lnff8",{"filePath":"20","messages":"21","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},"/Users/Jake.Squier/blockBots/frontend/src/HomePage/HomePage.js",["40","41","42","43","44","45","46","47","48","49"],"/Users/Jake.Squier/blockBots/frontend/src/HomePage/components/index.js",["50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65"],"import React from 'react';\nimport { Button, Typography, Grid, AppBar, Toolbar, requirePropFactory} from '@material-ui/core';\nimport { makeStyles, ThemeProvider} from '@material-ui/core/styles';\nimport { blue } from '@material-ui/core/colors';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { defaultProps, propTypes } from 'react-codemirror';\nimport ProjectCard from './ProjectCard';\nimport { TabPanel } from '@material-ui/lab';\nimport { render } from '@testing-library/react';\n\nconst Index = (props) => {\n\n    const [selectedTab, setTab] = React.useState(1);\n\n    const [selectedProjects, setProjects] = React.useState([])\n\n    var projects = props.projects\n\n    const indexStyles = makeStyles({\n        root: {\n            color: \"white\",\n            position: \"static\",\n            height: \"46px\",\n            borderRadius: \"8px\",\n            position: \"static\"\n        }\n    })\n\n    const classes = indexStyles();\n\n    const handleTabChange = (event, newValue) => {\n        setTab(newValue);\n    }\n\n    const deleteProject = (project) => {\n        const container = document.querySelector('.container')\n        fetch(`http://localhost:3000/api/v1/projects/${project.id}`, {\n            method: 'DELETE',\n        })\n        .then(res => res.json)\n        .then(data => {\n            projects = props.state.allProjects.filter(p => p.id != project.id)\n            props.updateProjects(projects)\n        })\n    }\n\n    const renderProjects = (projects) => {\n        if(projects != 0){\n            return(projects.map((project)=> <ProjectCard setProject={props.setProject} project={project} history={props.history} state={props.state} deleteProject={deleteProject} userProjectsDenied={props.userProjectsDenied} setUser={props.setUser} openCriminal={props.openCriminal}/>));\n        }\n        return (<Typography variant='h1'>You Have no Projects!</Typography>)\n    }\n\n    return(\n            <Grid container style={{backgroundColor: \"\", marginRight: \"20px\", marginLeft: \"20px\", marginBottom: \"20px\", borderRadius: \"20px\", borderStyle: \"solid\", borderColor: \"black\", borderWidth: \"5px\"}} elevation={3}>\n                <AppBar className={classes.root} >\n                    <Tabs variant=\"fullWidth\" value={selectedTab} onChange={handleTabChange}>\n                        <Tab label=\"My Projects\"onClick={()=>{\n                            if(props.user === null ){\n                                props.userProjectsDenied()\n                                setTab(1)\n                            }\n                        }}/>\n                        <Tab label=\"Community Projects\"/>\n                    </Tabs>\n                </AppBar>\n                <div style={{overflowX: 'hidden', overflowY: 'auto', padding: '20px', height: '850px'}}>\n                    <Grid container className='container'>\n                        {/* {projects.map((project)=> <ProjectCard setProject={props.setProject} project={project} history={props.history}/>)} */}\n                        {selectedTab === 0 && props.state.allProjects.filter(project => project.user_id === props.user.id).map(project=><ProjectCard setProject={props.setProject} project={project} history={props.history} state={props.state} deleteProject={deleteProject} userProjectsDenied={props.userProjectsDenied} setUser={props.setUser} openCriminal={props.openCriminal}/>)}\n                        {selectedTab === 1 && props.state.allProjects.map(project=> <ProjectCard setProject={props.setProject} project={project} history={props.history} state={props.state} deleteProject={deleteProject} userProjectsDenied={props.userProjectsDenied} setUser={props.setUser} openCriminal={props.openCriminal}/>)}\n                    </Grid>\n                </div>\n            </Grid>\n    );\n}\n\nexport default Index;","/Users/Jake.Squier/blockBots/frontend/src/HomePage/components/ProjectCard.jsx",["66","67","68","69","70","71","72","73","74","75","76","77","78"],"/Users/Jake.Squier/blockBots/frontend/src/HomePage/components/landArea.jsx",["79","80"],"import React from 'react';\nimport { Button, Grid } from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport NewProjectBtn from './newProjectBtn'\n\nconst LandArea = props => {\n\n    return(\n        <Grid item>\n            <NewProjectBtn style={{marginTop: \"0px\"}} state={props.state} userProjectsDenied={props.userProjectsDenied} handleNewProject={props.handleNewProject}/>\n        </Grid>\n    );\n}\n\nexport default LandArea;","/Users/Jake.Squier/blockBots/frontend/src/HomePage/components/header.jsx",["81","82","83","84","85","86","87","88","89","90","91"],"import React from 'react';\nimport {Menu, MenuItem, IconButton, AppBar, Toolbar, Typography, Grid, Button, Dialog, DialogTitle, DialogContent, TextField, DialogActions, DialogContentText} from '@material-ui/core';\nimport { makeStyles, ThemeProvider} from '@material-ui/core/styles';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CheckIcon from '@material-ui/icons/Check';\nimport './forms.css'\nimport { Formik, Field, Form } from 'formik';\nimport { mixed, number, object, string} from 'yup';\nimport * as Yup from 'yup';\nimport { red } from '@material-ui/core/colors';\nimport { ContactlessOutlined } from '@material-ui/icons';\n\n\nconst Header = (props) => {\n\n    const [openLogin, setOpenLogin] = React.useState(false);\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n\n    const [openLogoutPop, setLogoutPop] = React.useState(false);\n\n    const [loginUsername, setLoginUsername] = React.useState('')\n\n    const [loginPassword, setLoginPassword] = React.useState('')\n\n    const [signUsername, setSignUsername] = React.useState('')\n\n    const [signPassword, setSignPassword] = React.useState('')\n\n    const [signEmail, setSignEmail] = React.useState('')\n\n    const handleSignUsername = (e) => {\n        setSignUsername(e.target.value)\n    }\n\n    const handleSignPassword = (e) => {\n        setSignPassword(e.target.value)\n    }\n\n    const handleSignEmail = (e) => {\n        setSignEmail(e.target.value)\n    }\n\n    const handleLoginUsername = (e) => {\n        setLoginUsername(e.target.value)\n    }\n\n    const handleLoginPassword = (e) => {\n        setLoginPassword(e.target.value)\n    }\n    \n    const handleMenu = (event) => {\n        if(props.state.user != null){\n            setAnchorEl(event.currentTarget);\n        }else{\n            var circle = document.querySelector('.accountcircle')\n            console.log(circle)\n            //circle.style.color = 'red';\n        \n        }\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleClickOpenLogin = () => {\n        setOpenLogin(true);\n    };\n    \n      const handleCloseLogin = () => {\n        setOpenLogin(false);\n    };\n\n    const [openSignUp, setOpenSignUp] = React.useState(false);\n\n    const handleClickOpenSignUp = () => {\n        setOpenSignUp(true);\n    }\n\n    const handleCloseSignUp = () => {\n        setOpenSignUp(false);\n    }\n\n\n    const navBar = makeStyles({\n        title: {\n            marginRight: \"1170px\"\n        },\n        loginButton: {\n            fontSize: \"14\",\n            fontFamily: \"IBM plex sans\",\n            marginRight: \"15px\",\n            variant: \"outlined\"\n        },\n        signUpButton: {\n\n            backgroundColor: \"#3485E4\",\n            marginRight: \"-10px\"\n        }\n    });\n    \n    const classes = navBar();\n\n    const closePop = () => {\n        setLogoutPop(false)\n    }\n    \n    return(\n        <>\n            <Dialog open={openLogoutPop} onClose={closePop} style={{color: '#262B3B'}}>\n                <DialogTitle variant='h6'>Are You Sure!</DialogTitle>\n                <DialogActions>\n                    <Button style={{width: '50%'}} onClick={closePop}><CloseIcon style={{color: 'red'}}/></Button>\n                    <Button style={{width: '50%'}}onClick={()=>{\n                        props.handleLogout()\n                        setLogoutPop(false)\n                        }}><CheckIcon style={{color: 'green'}}/></Button>\n                </DialogActions>\n            </Dialog>\n        <AppBar boxShadow={3} position=\"static\" width=\"100%\" style={{ margin: 0 }}>\n                <Toolbar>\n                        <IconButton\n                            aria-label=\"account of current user\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            onClick={handleMenu}\n                            color=\"inherit\"\n                        >\n                            <AccountCircleIcon className='accountcircle' size='large'/>\n                        </IconButton>\n                        <Menu\n                            id=\"menu-appbar\"\n                            anchorEl={anchorEl}\n                            anchorOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                            }}\n                            open={open}\n                            onClose={handleClose}\n                        >\n                            <MenuItem onClick={()=>{\n                                handleClose()\n                                props.handleInfoOpen()\n                            }}>My Account</MenuItem>\n                            <MenuItem onClick={()=>{\n                                handleClose()\n                                setLogoutPop(true)\n                            }}>Logout</MenuItem>\n                        </Menu>\n\n                        {props.state.user? <Typography className={classes.title}><CheckCircleIcon style={{color: 'green', marginTop: '6px'}}/></Typography>: <Typography className={classes.title}><ErrorOutlineIcon style={{color: 'red', marginTop: '6px'}}/></Typography>}\n                        <Button \n                            className={classes.loginButton} \n                            style={{backgroundColor: \"#262B3B\", color: \"#3485E4\"}}\n                            boxShadow={3} \n                            onMouseEnter={event=>{\n                                event.target.style.backgroundColor = \"#3485E4\" \n                                event.target.style.color = \"white\"\n                            }}\n                            onMouseLeave={event=>{\n                                event.target.style.backgroundColor = \"#262B3B\"\n                                event.target.style.color = \"#3485E4\"\n                            }}\n                            onClick={handleClickOpenLogin}\n                            >Log in</Button>\n                            <Dialog open={openLogin} onClose={handleCloseLogin}>\n                                <DialogTitle id=\"login\" style={{marginLeft: '180px'}}>Login</DialogTitle>\n                                <DialogContent>\n                                    <Formik\n                                    validationSchema={\n                                        object({\n                                            \n                                        })\n                                    }\n                                    initialValues={{\n                                        username: '',\n                                        password: ''\n                                    }}\n                                    onSubmit={(values) => {\n                                        console.log(props)\n                                        handleCloseLogin();\n                                    }}\n                                    >\n                                    {({values}) => (\n                                        <Form>\n                                            <TextField name='username' label='Username' fullWidth onChange={handleLoginUsername}/>\n                                            <TextField name='password' label='Password' type='password' fullWidth onChange={handleLoginPassword}/>\n                                            <Button type='submit' onClick={()=>{\n                                                props.handleLogin({username: loginUsername, password: loginPassword})\n                                                handleCloseLogin()\n                                            }} fullWidth style={{marginTop: '20px', backgroundColor: 'blue'}}>Login</Button>\n                                        </Form>\n                                    )}\n                                    </Formik>\n                                    {/* <div id='loginWrapper'>\n                                        <div className='login-form-container'>\n                                            <form onSubmit={(e) => {\n                                                props.handleLogin(e)\n                                                handleCloseLogin()\n                                            }}>\n                                                <div className='login-input-group'>\n                                                    <i className='fas fa-user'/>\n                                                    <input type=\"text\" name=\"username\"/>\n                                                    <span className='login-bar'/>\n                                                </div>\n                                                <div className='login-input-group'>\n                                                    <i className='fas fa-envelope'/>\n                                                    <input type=\"text\" name=\"password\"/>\n                                                    <span className='login-bar'/>\n                                                </div>\n                                                <div className='login-input-group'>\n                                                    <i className='fas fa-'/>\n                                                    <input type=\"submit\" value=\"Submit\"/>\n                                                    <span className='login-bar'/>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div> */}\n                                </DialogContent>\n                        </Dialog>\n                        <Button className={classes.signUpButton} boxShadow={3} onClick={handleClickOpenSignUp}>Sign up</Button>\n                        <Dialog open={openSignUp} onClose={handleCloseSignUp}>\n                                <DialogTitle id=\"signup\" style={{marginLeft: '243px'}}>Sign Up</DialogTitle>\n                                    <DialogContent>\n                                    {/* <div className='signupWrapper'>\n                                            <div className='signup-form-container'>\n                                                <form onSubmit={(e)=>{\n                                                    props.createUser(e)\n                                                    handleCloseSignUp()\n                                                }}>\n                                                    <div className=\"signup-input-group\">\n                                                        <i class=\"fas fa-user\"/>\n                                                        <input type=\"text\" name=\"username\" placeholder=\"Username...\"/>\n                                                        <span className='signup-bar'/>\n                                                    </div>\n                                                    <div className=\"signup-input-group\">\n                                                        <i class=\"fas fa-envelope\"/>\n                                                        <input type=\"text\" name=\"email\" placeholder=\"Email...\"/>\n                                                        <span className='signup-bar'/>\n                                                    </div>\n                                                    <div className=\"signup-input-group\">\n                                                        <i className=\"fas fa-lock\"/>\n                                                        <input type=\"text\" name=\"password\" placeholder=\"Password...\"/>\n                                                        <span className='signup-bar'/>\n                                                    </div>\n                                                    <div className=\"signup-input-group\">\n                                                        <i class=\"fas fa-lock\"/>\n                                                        <input type=\"password\" name=\"passwordConf\" placeholder=\"Confirm password...\"/>\n                                                        <span className='signup-bar'/>\n                                                    </div>\n                                                    <div className=\"signup-input-group\">\n                                                        <i class=\"fas fa-telegram-plane\"/>\n                                                        <input type=\"submit\" value=\"submit\"/>\n                                                        <span className='signup-bar'/>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                        </div> */}\n                                        <Formik \n                                        validationSchema={\n                                            object({\n                                                \n                                            })\n                                        }\n                                        initialValues={{\n                                            firstname: '',\n                                            surname: '',\n                                            email: '',\n                                            username: '',\n                                            password: ''\n                                        }}\n                                        onSubmit={(event, values)=>{\n                                            console.log(values)\n                                            handleCloseSignUp();\n                                            props.createUser()\n                                            fetch('http://localhost:3000/api/v1/users', {\n                                                method: 'POST',\n                                                headers: {\n                                                    \"Content-Type\": \"application/json\",\n                                                },\n                                                body: JSON.stringify({\n                                                    name: values.firstname,\n                                                    surname: values.surname,\n                                                    username: values.username,\n                                                    password: values.password,\n                                                    email: values.email\n                                                })\n                                            })\n                                            .then(res => res.json())\n                                            .then(console.log)\n                                        }}>\n                                            {({values}) => (\n                                                <Form>\n                                                    <TextField name='username' label='Username' fullWidth onChange={handleSignUsername}/>\n                                                    <TextField name='email' label='Email' fullWidth onChange={handleSignEmail}/>\n                                                    <TextField name='password' label='Password' type='password' fullWidth onChange={handleSignPassword}/>\n                                                    <Button type='submit' onClick={()=>{\n                                                        props.createUser({username: signUsername, email: signEmail, password: signPassword})\n                                                        handleCloseSignUp()\n                                                    }}fullWidth style={{marginTop: '20px', backgroundColor: 'blue'}}>Sign Up</Button>\n                                                </Form>\n                                            )}\n                                        </Formik>\n                                    </DialogContent>\n                        </Dialog>\n                </Toolbar>\n        </AppBar>\n        </>\n    );\n}\n\nexport default Header;","/Users/Jake.Squier/blockBots/frontend/src/HomePage/components/newProjectBtn.jsx",["92"],"import React from 'react';\nimport { Button } from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport { propTypes } from 'react-codemirror';\n\nconst NewProjectBtn = (props) => {\n    const buttonStyles = makeStyles({\n        root: {\n            backgroundColor: \"blue\",\n            marginTop: \"100px\"\n        }\n    })\n\n    const classes = buttonStyles();\n\n    return(\n        <div>\n            <Button className={classes.root} style={{marginTop: \"300px\", marginLeft: \"650px\" }} onClick={() => {\n                if(props.state.user != null){\n                    props.handleNewProject()\n                    return 0;\n                }else{props.userProjectsDenied()}\n            }}>newProject</Button>\n        </div>\n    );\n}\n\nexport default NewProjectBtn;\n","/Users/Jake.Squier/blockBots/frontend/src/index.js",[],["93","94"],"/Users/Jake.Squier/blockBots/frontend/src/ProjectPage/components/ProjectArea.js",["95","96","97","98","99","100","101","102"],"import React, { useState, useEffect } from 'react';\nimport Editor from './Editor'\nimport useLocalStorage from './hooks/useLocalStorage'\nimport Savebtn from './SaveBtn'\nimport { AppBar, Toolbar, Button, Typography, Grid, Paper, Dialog, DialogTitle, DialogContent, TextField, DialogActions, DialogContentText} from '@material-ui/core';\n\nfunction ProjectArea(props) {\n  const [html, setHtml] = useState(props.project.html)\n  const [css, setCss] = useState(props.project.css)\n  const [js, setJs] = useState(props.project.javascript)\n  const [srcDoc, setSrcDoc] = useState('')\n  const [open, setOpen] = React.useState(false);\n  const [title, setTitle] = useState(props.project.project_name)\n\n\n  \n\n  const handleClickOpen = () => {\n    console.log(props)\n    if(props.user != null){\n      if(props.user.id === props.project.user_id){\n        setOpen(true)\n      }\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleTitle = (e) => {\n    setTitle(e.target.value)\n  }\n\n  const handleSave = event => {\n      setOpen(false);\n      const project = {\n        project_name: title,\n        html: html,\n        css: css,\n        javascript: js,\n        theme: 'dark'\n      }\n      console.log(project)\n      fetch(`http://localhost:3000/api/v1/projects/${props.project.id}`, {\n        method: 'PATCH',\n        headers: {\n          \"Content-Type\": 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify(project)\n  \n    })\n    .then(res => res.json())\n    .then(console.log)\n  }\n\n  const returnHome = () => {\n    if(props.user != null){\n        if(props.user.id === props.project.user_id){\n            handleSave()\n        }\n    }\n    props.history.push(\"/\")\n  }\n\n  useEffect(() => {\n      setSrcDoc(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n      `)\n  })\n\n  return (\n    <div style={{border: '5px', borderColor: 'hsl(225, 6%, 25%)', borderStyle: 'solid', backgroundColor: \"hsl(225, 6%, 25%)\"}}>\n     <Button className='a' style={{marginLeft: '1267px'}} onClick={returnHome}>Go Home</Button>\n     <Button \n      fullWidth\n      style={{backgroundColor: \"hsl(225, 6%, 25%)\", borderRadius: \"0px\", color: \"powderblue\", marginTop: '4px'}}\n      variant=\"outlined\"\n      onClick={handleClickOpen}>\n          Save\n      </Button>\n      <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"save-form\">Save Project</DialogTitle>\n          <DialogContent>\n          <DialogContentText>\n            Please provide a Project Name\n            so we can save your terrible code.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"projectName\"\n            label=\"Project Name here...\"\n            type=\"email\"\n            onChange={handleTitle}\n            fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cry\n          </Button>\n          <Button onClick={handleSave} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <div className=\"pane top-pane\">\n        <Editor\n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onChange={setHtml}\n        />\n        <Editor\n          language=\"css\"\n          displayName=\"CSS\"\n          value={css}\n          onChange={setCss}\n        />\n        <Editor\n          language=\"javascript\"\n          displayName=\"JS\"\n          value={js}\n          onChange={setJs}\n        />\n      </div>\n      <div className=\"pane\" style={{backgroundColor: 'white'}}>\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectArea;",{"ruleId":"103","severity":1,"message":"104","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":20},{"ruleId":"103","severity":1,"message":"107","line":2,"column":85,"nodeType":"105","messageId":"106","endLine":2,"endColumn":94},{"ruleId":"103","severity":1,"message":"108","line":2,"column":111,"nodeType":"105","messageId":"106","endLine":2,"endColumn":128},{"ruleId":"103","severity":1,"message":"109","line":3,"column":10,"nodeType":"105","messageId":"106","endLine":3,"endColumn":20},{"ruleId":"103","severity":1,"message":"110","line":3,"column":22,"nodeType":"105","messageId":"106","endLine":3,"endColumn":35},{"ruleId":"103","severity":1,"message":"111","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":17},{"ruleId":"103","severity":1,"message":"112","line":5,"column":8,"nodeType":"105","messageId":"106","endLine":5,"endColumn":23},{"ruleId":"103","severity":1,"message":"113","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":30},{"ruleId":"103","severity":1,"message":"114","line":9,"column":8,"nodeType":"105","messageId":"106","endLine":9,"endColumn":21},{"ruleId":"103","severity":1,"message":"115","line":12,"column":10,"nodeType":"105","messageId":"106","endLine":12,"endColumn":24},{"ruleId":"103","severity":1,"message":"116","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":16},{"ruleId":"103","severity":1,"message":"117","line":2,"column":44,"nodeType":"105","messageId":"106","endLine":2,"endColumn":51},{"ruleId":"103","severity":1,"message":"118","line":2,"column":53,"nodeType":"105","messageId":"106","endLine":2,"endColumn":71},{"ruleId":"103","severity":1,"message":"110","line":3,"column":22,"nodeType":"105","messageId":"106","endLine":3,"endColumn":35},{"ruleId":"103","severity":1,"message":"119","line":4,"column":10,"nodeType":"105","messageId":"106","endLine":4,"endColumn":14},{"ruleId":"103","severity":1,"message":"120","line":7,"column":10,"nodeType":"105","messageId":"106","endLine":7,"endColumn":22},{"ruleId":"103","severity":1,"message":"121","line":7,"column":24,"nodeType":"105","messageId":"106","endLine":7,"endColumn":33},{"ruleId":"103","severity":1,"message":"122","line":9,"column":10,"nodeType":"105","messageId":"106","endLine":9,"endColumn":18},{"ruleId":"103","severity":1,"message":"123","line":10,"column":10,"nodeType":"105","messageId":"106","endLine":10,"endColumn":16},{"ruleId":"103","severity":1,"message":"124","line":16,"column":12,"nodeType":"105","messageId":"106","endLine":16,"endColumn":28},{"ruleId":"103","severity":1,"message":"125","line":16,"column":30,"nodeType":"105","messageId":"106","endLine":16,"endColumn":41},{"ruleId":"126","severity":1,"message":"127","line":26,"column":13,"nodeType":"128","messageId":"129","endLine":26,"endColumn":21},{"ruleId":"103","severity":1,"message":"130","line":37,"column":15,"nodeType":"105","messageId":"106","endLine":37,"endColumn":24},{"ruleId":"131","severity":1,"message":"132","line":43,"column":65,"nodeType":"133","messageId":"129","endLine":43,"endColumn":67},{"ruleId":"103","severity":1,"message":"134","line":48,"column":11,"nodeType":"105","messageId":"106","endLine":48,"endColumn":25},{"ruleId":"131","severity":1,"message":"132","line":49,"column":21,"nodeType":"133","messageId":"129","endLine":49,"endColumn":23},{"ruleId":"103","severity":1,"message":"135","line":2,"column":9,"nodeType":"105","messageId":"106","endLine":2,"endColumn":15},{"ruleId":"103","severity":1,"message":"117","line":2,"column":17,"nodeType":"105","messageId":"106","endLine":2,"endColumn":24},{"ruleId":"103","severity":1,"message":"136","line":2,"column":38,"nodeType":"105","messageId":"106","endLine":2,"endColumn":42},{"ruleId":"103","severity":1,"message":"137","line":2,"column":52,"nodeType":"105","messageId":"106","endLine":2,"endColumn":58},{"ruleId":"103","severity":1,"message":"138","line":2,"column":60,"nodeType":"105","messageId":"106","endLine":2,"endColumn":71},{"ruleId":"103","severity":1,"message":"139","line":2,"column":73,"nodeType":"105","messageId":"106","endLine":2,"endColumn":86},{"ruleId":"103","severity":1,"message":"107","line":2,"column":88,"nodeType":"105","messageId":"106","endLine":2,"endColumn":97},{"ruleId":"103","severity":1,"message":"140","line":2,"column":99,"nodeType":"105","messageId":"106","endLine":2,"endColumn":112},{"ruleId":"103","severity":1,"message":"108","line":2,"column":114,"nodeType":"105","messageId":"106","endLine":2,"endColumn":131},{"ruleId":"103","severity":1,"message":"109","line":3,"column":10,"nodeType":"105","messageId":"106","endLine":3,"endColumn":20},{"ruleId":"103","severity":1,"message":"110","line":3,"column":22,"nodeType":"105","messageId":"106","endLine":3,"endColumn":35},{"ruleId":"103","severity":1,"message":"141","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":25},{"ruleId":"103","severity":1,"message":"122","line":5,"column":10,"nodeType":"105","messageId":"106","endLine":5,"endColumn":18},{"ruleId":"103","severity":1,"message":"116","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":16},{"ruleId":"103","severity":1,"message":"109","line":3,"column":9,"nodeType":"105","messageId":"106","endLine":3,"endColumn":19},{"ruleId":"103","severity":1,"message":"136","line":2,"column":66,"nodeType":"105","messageId":"106","endLine":2,"endColumn":70},{"ruleId":"103","severity":1,"message":"108","line":2,"column":142,"nodeType":"105","messageId":"106","endLine":2,"endColumn":159},{"ruleId":"103","severity":1,"message":"110","line":3,"column":22,"nodeType":"105","messageId":"106","endLine":3,"endColumn":35},{"ruleId":"103","severity":1,"message":"113","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":30},{"ruleId":"103","severity":1,"message":"142","line":11,"column":18,"nodeType":"105","messageId":"106","endLine":11,"endColumn":23},{"ruleId":"103","severity":1,"message":"143","line":12,"column":10,"nodeType":"105","messageId":"106","endLine":12,"endColumn":15},{"ruleId":"103","severity":1,"message":"144","line":12,"column":17,"nodeType":"105","messageId":"106","endLine":12,"endColumn":23},{"ruleId":"103","severity":1,"message":"145","line":12,"column":33,"nodeType":"105","messageId":"106","endLine":12,"endColumn":39},{"ruleId":"103","severity":1,"message":"146","line":13,"column":13,"nodeType":"105","messageId":"106","endLine":13,"endColumn":16},{"ruleId":"103","severity":1,"message":"147","line":14,"column":10,"nodeType":"105","messageId":"106","endLine":14,"endColumn":13},{"ruleId":"103","severity":1,"message":"148","line":15,"column":10,"nodeType":"105","messageId":"106","endLine":15,"endColumn":29},{"ruleId":"103","severity":1,"message":"121","line":4,"column":10,"nodeType":"105","messageId":"106","endLine":4,"endColumn":19},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"103","severity":1,"message":"153","line":3,"column":8,"nodeType":"105","messageId":"106","endLine":3,"endColumn":23},{"ruleId":"103","severity":1,"message":"154","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":15},{"ruleId":"103","severity":1,"message":"135","line":5,"column":10,"nodeType":"105","messageId":"106","endLine":5,"endColumn":16},{"ruleId":"103","severity":1,"message":"117","line":5,"column":18,"nodeType":"105","messageId":"106","endLine":5,"endColumn":25},{"ruleId":"103","severity":1,"message":"155","line":5,"column":35,"nodeType":"105","messageId":"106","endLine":5,"endColumn":45},{"ruleId":"103","severity":1,"message":"136","line":5,"column":47,"nodeType":"105","messageId":"106","endLine":5,"endColumn":51},{"ruleId":"103","severity":1,"message":"156","line":5,"column":53,"nodeType":"105","messageId":"106","endLine":5,"endColumn":58},{"ruleId":"157","severity":1,"message":"158","line":67,"column":3,"nodeType":"105","endLine":67,"endColumn":12,"suggestions":"159"},"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'DialogContentText' is defined but never used.","'makeStyles' is defined but never used.","'ThemeProvider' is defined but never used.","'BlockIcon' is defined but never used.","'CheckCircleIcon' is defined but never used.","'CheckCircleOutlineIcon' is defined but never used.","'NewProjectBtn' is defined but never used.","'ThumbDownSharp' is defined but never used.","'Button' is defined but never used.","'Toolbar' is defined but never used.","'requirePropFactory' is defined but never used.","'blue' is defined but never used.","'defaultProps' is defined but never used.","'propTypes' is defined but never used.","'TabPanel' is defined but never used.","'render' is defined but never used.","'selectedProjects' is assigned a value but never used.","'setProjects' is assigned a value but never used.","no-dupe-keys","Duplicate key 'position'.","ObjectExpression","unexpected","'container' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'renderProjects' is assigned a value but never used.","'AppBar' is defined but never used.","'Grid' is defined but never used.","'Dialog' is defined but never used.","'DialogTitle' is defined but never used.","'DialogContent' is defined but never used.","'DialogActions' is defined but never used.","'AccountCircleIcon' is defined but never used.","'Field' is defined but never used.","'mixed' is defined but never used.","'number' is defined but never used.","'string' is defined but never used.","'Yup' is defined but never used.","'red' is defined but never used.","'ContactlessOutlined' is defined but never used.","no-native-reassign",["160"],"no-negated-in-lhs",["161"],"'useLocalStorage' is defined but never used.","'Savebtn' is defined but never used.","'Typography' is defined but never used.","'Paper' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setSrcDoc'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [html, css, js] as a second argument to the useEffect Hook.",["162"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},"Add dependencies array: [html, css, js]",{"range":"165","text":"166"},[1896,1896],", [html, css, js]"]