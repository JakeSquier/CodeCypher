{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Jake.Squier/blockBots/frontend/src/HomePage/components/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Typography, Grid, AppBar, Toolbar, requirePropFactory } from '@material-ui/core';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport { blue } from '@material-ui/core/colors';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { defaultProps, propTypes } from 'react-codemirror';\nimport ProjectCard from './ProjectCard';\nimport { TabPanel } from '@material-ui/lab';\nimport { render } from '@testing-library/react';\n\nconst Index = props => {\n  _s();\n\n  const [selectedTab, setTab] = React.useState(1);\n  var projects = props.projects;\n  const indexStyles = makeStyles({\n    root: {\n      color: \"white\",\n      position: \"static\",\n      height: \"46px\",\n      borderRadius: \"8px\",\n      position: \"static\"\n    }\n  });\n  const classes = indexStyles();\n\n  const handleTabChange = (event, newValue) => {\n    setTab(newValue);\n\n    if (selectedTab === 0) {\n      projects = projects.filter(project => project.user_id === props.user.id);\n    }\n\n    renderProjects(projects);\n  };\n\n  const renderProjects = projects => {\n    if (projects != 0) {\n      return projects.map(project => /*#__PURE__*/_jsxDEV(ProjectCard, {\n        setProject: props.setProject,\n        project: project,\n        history: props.history\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 45\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      children: \"You Have no Projects!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    style: {\n      backgroundColor: \"\",\n      marginRight: \"20px\",\n      marginLeft: \"20px\",\n      marginBottom: \"20px\",\n      borderRadius: \"20px\",\n      borderStyle: \"solid\",\n      borderColor: \"black\",\n      borderWidth: \"5px\"\n    },\n    elevation: 3,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        variant: \"fullWidth\",\n        value: selectedTab,\n        onChange: handleTabChange,\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"My Projects\",\n          onClick: () => {\n            if (props.user === null) {\n              props.userProjectsDenied();\n              setTab(1);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Community Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflowX: 'hidden',\n        overflowY: 'auto',\n        padding: '20px',\n        height: '850px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: renderProjects(projects)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Index, \"wuPryp/lM0mCyn9v4MbUwdA6o5E=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/Jake.Squier/blockBots/frontend/src/HomePage/components/index.js"],"names":["React","Button","Typography","Grid","AppBar","Toolbar","requirePropFactory","makeStyles","ThemeProvider","blue","Tabs","Tab","defaultProps","propTypes","ProjectCard","TabPanel","render","Index","props","selectedTab","setTab","useState","projects","indexStyles","root","color","position","height","borderRadius","classes","handleTabChange","event","newValue","filter","project","user_id","user","id","renderProjects","map","setProject","history","backgroundColor","marginRight","marginLeft","marginBottom","borderStyle","borderColor","borderWidth","userProjectsDenied","overflowX","overflowY","padding"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Typography, Grid, AppBar, Toolbar, requirePropFactory} from '@material-ui/core';\nimport { makeStyles, ThemeProvider} from '@material-ui/core/styles';\nimport { blue } from '@material-ui/core/colors';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { defaultProps, propTypes } from 'react-codemirror';\nimport ProjectCard from './ProjectCard';\nimport { TabPanel } from '@material-ui/lab';\nimport { render } from '@testing-library/react';\n\nconst Index = (props) => {\n\n    const [selectedTab, setTab] = React.useState(1);\n\n    var projects = props.projects\n\n    const indexStyles = makeStyles({\n        root: {\n            color: \"white\",\n            position: \"static\",\n            height: \"46px\",\n            borderRadius: \"8px\",\n            position: \"static\"\n        }\n    })\n\n    const classes = indexStyles();\n\n    const handleTabChange = (event, newValue) => {\n        setTab(newValue);\n        if(selectedTab === 0){           \n                projects = projects.filter(project => project.user_id === props.user.id)\n        }\n        renderProjects(projects)\n    }\n\n    const renderProjects = (projects) => {\n        if(projects != 0){\n            return(projects.map((project)=> <ProjectCard setProject={props.setProject} project={project} history={props.history}/>));\n        }\n        return (<Typography variant='h1'>You Have no Projects!</Typography>)\n    }\n\n    return(\n            <Grid container style={{backgroundColor: \"\", marginRight: \"20px\", marginLeft: \"20px\", marginBottom: \"20px\", borderRadius: \"20px\", borderStyle: \"solid\", borderColor: \"black\", borderWidth: \"5px\"}} elevation={3}>\n                <AppBar className={classes.root} >\n                    <Tabs variant=\"fullWidth\" value={selectedTab} onChange={handleTabChange}>\n                        <Tab label=\"My Projects\"onClick={()=>{\n                            if(props.user === null ){\n                                props.userProjectsDenied()\n                                setTab(1)\n                            }\n                        }}/>\n                        <Tab label=\"Community Projects\"/>\n                    </Tabs>\n                </AppBar>\n                <div style={{overflowX: 'hidden', overflowY: 'auto', padding: '20px', height: '850px'}}>\n                    <Grid container>\n                        {/* {projects.map((project)=> <ProjectCard setProject={props.setProject} project={project} history={props.history}/>)} */}\n                        {renderProjects(projects)}\n                    </Grid>\n                </div>\n            </Grid>\n    );\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}