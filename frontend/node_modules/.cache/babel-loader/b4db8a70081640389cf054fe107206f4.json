{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Jake.Squier/blockBots/frontend/src/pages/HomePage/components/header.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { AppBar, Toolbar, Typography, Grid, Button, Dialog, DialogTitle, DialogContent, TextField, DialogActions, DialogContentText } from '@material-ui/core';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { Formik, Field, Form } from 'formik';\nimport { mixed, number, object, string } from 'yup';\nimport * as Yup from 'yup';\n\nconst Header = props => {\n  _s();\n\n  const [openLogin, setOpenLogin] = React.useState(false);\n\n  const handleClickOpenLogin = () => {\n    setOpenLogin(true);\n  };\n\n  const handleCloseLogin = () => {\n    setOpenLogin(false);\n  };\n\n  const [openSignUp, setOpenSignUp] = React.useState(false);\n\n  const handleClickOpenSignUp = () => {\n    setOpenSignUp(true);\n  };\n\n  const handleCloseSignUp = () => {\n    setOpenSignUp(false);\n  };\n\n  const navBar = makeStyles({\n    title: {\n      marginRight: \"1110px\"\n    },\n    loginButton: {\n      fontSize: \"14\",\n      fontFamily: \"IBM plex sans\",\n      marginRight: \"15px\",\n      variant: \"outlined\"\n    },\n    signUpButton: {\n      backgroundColor: \"#3485E4\",\n      marginRight: \"2px\"\n    }\n  });\n  const classes = navBar();\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    boxShadow: 3,\n    position: \"static\",\n    width: \"100%\",\n    style: {\n      margin: 0\n    },\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: [/*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        variant: \"h6\",\n        children: \"StarCipher\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.loginButton,\n        style: {\n          backgroundColor: \"#262B3B\",\n          color: \"#3485E4\"\n        },\n        boxShadow: 3,\n        onMouseEnter: event => {\n          event.target.style.backgroundColor = \"#3485E4\";\n          event.target.style.color = \"white\";\n        },\n        onMouseLeave: event => {\n          event.target.style.backgroundColor = \"#262B3B\";\n          event.target.style.color = \"#3485E4\";\n        },\n        onClick: handleClickOpenLogin,\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: openLogin,\n        onClose: handleCloseLogin,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"save-form\",\n          children: \"Save Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            validationSchema: object({}),\n            initialValues: {\n              username: '',\n              password: ''\n            },\n            onSubmit: () => {},\n            children: ({\n              values\n            }) => /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                name: \"username\",\n                as: TextField,\n                label: \"Username\",\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"password\",\n                as: TextField,\n                label: \"Password\",\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.signUpButton,\n        boxShadow: 3,\n        onClick: handleClickOpenSignUp,\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: openSignUp,\n        onClose: handleCloseSignUp,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"save-form\",\n          style: {\n            marginLeft: '243px'\n          },\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            validationSchema: object({}),\n            initialValues: {\n              firstname: '',\n              surname: '',\n              email: '',\n              username: '',\n              password: ''\n            },\n            onSubmit: values => {\n              console.log(values);\n              handleCloseSignUp();\n              fetch('http://localhost:3000/api/v1/users', {\n                method: 'POST',\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Accept: \"application/json\"\n                },\n                body: JSON.stringify({\n                  name: values.firstname,\n                  surname: values.surname,\n                  username: values.username,\n                  password: values.password,\n                  email: values.email\n                })\n              }).then(res => res.json()).then(console.log);\n            },\n            children: ({\n              values\n            }) => /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                name: \"firstname\",\n                as: TextField,\n                label: \"First Name\",\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"surname\",\n                as: TextField,\n                label: \"Last Name\",\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"email\",\n                as: TextField,\n                label: \"Email\",\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"username\",\n                as: TextField,\n                label: \"Username\",\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"password\",\n                as: TextField,\n                label: \"Password\",\n                type: \"password\",\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                fullWidth: true,\n                style: {\n                  marginTop: '20px',\n                  backgroundColor: 'blue'\n                },\n                children: \"Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Header, \"yTZ+1aL1pAeltZ0Hze56mMLyi8U=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/Jake.Squier/blockBots/frontend/src/pages/HomePage/components/header.jsx"],"names":["React","AppBar","Toolbar","Typography","Grid","Button","Dialog","DialogTitle","DialogContent","TextField","DialogActions","DialogContentText","makeStyles","ThemeProvider","AccountCircleIcon","Formik","Field","Form","mixed","number","object","string","Yup","Header","props","openLogin","setOpenLogin","useState","handleClickOpenLogin","handleCloseLogin","openSignUp","setOpenSignUp","handleClickOpenSignUp","handleCloseSignUp","navBar","title","marginRight","loginButton","fontSize","fontFamily","variant","signUpButton","backgroundColor","classes","margin","color","event","target","style","username","password","values","marginLeft","firstname","surname","email","console","log","fetch","method","headers","Accept","body","JSON","stringify","name","then","res","json","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {AppBar, Toolbar, Typography, Grid, Button, Dialog, DialogTitle, DialogContent, TextField, DialogActions, DialogContentText} from '@material-ui/core';\nimport { makeStyles, ThemeProvider} from '@material-ui/core/styles';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { Formik, Field, Form } from 'formik';\nimport { mixed, number, object, string} from 'yup';\nimport * as Yup from 'yup';\n\nconst Header = (props) => {\n\n    const [openLogin, setOpenLogin] = React.useState(false);\n\n    const handleClickOpenLogin = () => {\n        setOpenLogin(true);\n    };\n    \n      const handleCloseLogin = () => {\n        setOpenLogin(false);\n    };\n\n    const [openSignUp, setOpenSignUp] = React.useState(false);\n\n    const handleClickOpenSignUp = () => {\n        setOpenSignUp(true);\n    }\n\n    const handleCloseSignUp = () => {\n        setOpenSignUp(false);\n    }\n\n    const navBar = makeStyles({\n        title: {\n            marginRight: \"1110px\"\n        },\n        loginButton: {\n            fontSize: \"14\",\n            fontFamily: \"IBM plex sans\",\n            marginRight: \"15px\",\n            variant: \"outlined\"\n        },\n        signUpButton: {\n\n            backgroundColor: \"#3485E4\",\n            marginRight: \"2px\"\n        }\n    });\n    \n    const classes = navBar();\n    \n    return(\n        <AppBar boxShadow={3} position=\"static\" width=\"100%\" style={{ margin: 0 }}>\n                <Toolbar>\n                        <AccountCircleIcon />\n                        <Typography className={classes.title} variant='h6'>StarCipher</Typography>\n                        <Button \n                            className={classes.loginButton} \n                            style={{backgroundColor: \"#262B3B\", color: \"#3485E4\"}}\n                            boxShadow={3} \n                            onMouseEnter={event=>{\n                                event.target.style.backgroundColor = \"#3485E4\" \n                                event.target.style.color = \"white\"\n                            }}\n                            onMouseLeave={event=>{\n                                event.target.style.backgroundColor = \"#262B3B\"\n                                event.target.style.color = \"#3485E4\"\n                            }}\n                            onClick={handleClickOpenLogin}\n                            >Log in</Button>\n                            <Dialog open={openLogin} onClose={handleCloseLogin}>\n                                <DialogTitle id=\"save-form\">Save Project</DialogTitle>\n                                <DialogContent>\n                                    <Formik\n                                    validationSchema={\n                                        object({\n                                            \n                                        })\n                                    }\n                                    initialValues={{\n                                        username: '',\n                                        password: ''\n                                    }}\n                                    onSubmit={() => {}}\n                                    >\n                                    {({values}) => (\n                                        <Form>\n                                            <Field name='username' as={TextField} label='Username' fullWidth/>\n                                            <Field name='password' as={TextField} label='Password' fullWidth/>\n                                        </Form>\n                                    )}\n                                    </Formik>\n                                </DialogContent>\n                        </Dialog>\n                        <Button className={classes.signUpButton} boxShadow={3} onClick={handleClickOpenSignUp}>Sign up</Button>\n                        <Dialog open={openSignUp} onClose={handleCloseSignUp}>\n                                <DialogTitle id=\"save-form\" style={{marginLeft: '243px'}}>Sign Up</DialogTitle>\n                                    <DialogContent>\n                                        <Formik \n                                        validationSchema={\n                                            object({\n                                                \n                                            })\n                                        }\n                                        initialValues={{\n                                            firstname: '',\n                                            surname: '',\n                                            email: '',\n                                            username: '',\n                                            password: ''\n                                        }}\n                                        onSubmit={(values)=>{\n                                            console.log(values)\n                                            handleCloseSignUp();\n                                            fetch('http://localhost:3000/api/v1/users', {\n                                                method: 'POST',\n                                                headers: {\n                                                    \"Content-Type\": \"application/json\",\n                                                    Accept: \"application/json\"\n                                                },\n                                                body: JSON.stringify({\n                                                    name: values.firstname,\n                                                    surname: values.surname,\n                                                    username: values.username,\n                                                    password: values.password,\n                                                    email: values.email\n                                                })\n                                            })\n                                            .then(res => res.json())\n                                            .then(console.log)\n                                        }}>\n                                            {({values}) => (\n                                                <Form>\n                                                    <Field name='firstname' as={TextField} label='First Name' fullWidth/>\n                                                    <Field name='surname' as={TextField} label='Last Name' fullWidth/>\n                                                    <Field name='email' as={TextField} label='Email' fullWidth/>\n                                                    <Field name='username' as={TextField} label='Username' fullWidth/>\n                                                    <Field name='password' as={TextField} label='Password' type='password' fullWidth/>\n                                                    <Button type='submit' fullWidth style={{marginTop: '20px', backgroundColor: 'blue'}}>Sign Up</Button>\n                                                </Form>\n                                            )}\n                                        </Formik>\n                                    </DialogContent>\n                        </Dialog>\n                </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}