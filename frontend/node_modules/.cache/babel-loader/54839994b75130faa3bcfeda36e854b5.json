{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Jake.Squier/blockBots/frontend/src/pages/HomePage/HomePage.js\";\nimport React from 'react';\nimport { Button, Typography, Grid } from '@material-ui/core';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport Header from './components/header';\nimport NewProjectBtn from './components/newProjectBtn';\nimport Index from './components/index';\nimport LandArea from './components/landArea';\n\nclass HomePage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.projectsURL = 'http://localhost:3000/api/v1/projects';\n    this.usersURL = 'http://localhost:3000/api/v1/users';\n    this.state = {\n      loggedIn: false,\n      user: {\n        id: 0,\n        username: '',\n        projects: []\n      },\n      allProjects: [],\n      indexPersonal: true\n    };\n\n    this.handlePersonal = () => {\n      this.setState({\n        indexPersonal: true\n      });\n    };\n\n    this.handleCommunity = () => {\n      this.setState({\n        indexPersonal: false\n      });\n    };\n\n    this.renderUserProjects = userInfo => {\n      console.log(userInfo.user_id);\n      fetch(this.projectsURL).then(res => res.json).then(projects => {\n        let userProjects = [];\n        projects.forEach(project => {\n          if (project.user_id == userInfo.user_id) {\n            userProjects.push(project);\n          }\n        });\n        this.setState({\n          user: {\n            projects: userProjects\n          }\n        });\n      });\n    };\n\n    this.createUser = e => {\n      e.preventDefault();\n      console.log('hello');\n      fetch('http://localhost:3000/api/v1/users', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: e.target.firstname.value,\n          surname: e.target.surname.value,\n          username: e.target.username.value,\n          password_digest: e.target.password.value,\n          email: e.target.email.value\n        })\n      }).then(res => res.json()).then(console.log);\n    };\n\n    this.handleLogin = e => {\n      e.preventDefault();\n      console.log(e.target.username.value);\n      fetch(\"http://localhost:3000/api/v1/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: e.target.username.value,\n          password_digest: e.target.password.value\n        })\n      }).then(res => res.json()).then(userInfo => {\n        console.log(userInfo.token);\n        this.renderUserProjects(userInfo);\n        localStorage.token = userInfo.token;\n      });\n    };\n\n    this.handleNewProject = e => {\n      e.preventDefault();\n      console.log('here');\n      fetch('http://localhost:3000/api/v1/projects', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: 1,\n          project_name: 'pog',\n          theme: 'dark',\n          html: '',\n          css: '',\n          javascript: ''\n        })\n      }).then(res => res.json()).then(project => console.log(project));\n    };\n  }\n\n  componentDidMount() {\n    fetch(this.projectsURL).then(res => res.json()).then(projects => {\n      console.log(projects);\n      this.setState({\n        allProjects: projects\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        state: this.state,\n        createUser: this.createUser,\n        handleLogin: this.handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          flexGrow: 1,\n          height: \"1600px\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          style: {\n            backgroundColor: \"#262B3B\",\n            height: \"46%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(LandArea, {\n            state: this.state,\n            handleNewProject: this.handleNewProject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          style: {\n            backgroundColor: \"#262B3B\",\n            height: \"54%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Index, {\n            state: this.state,\n            handlePersonal: this.handlePersonal,\n            handleCommunity: this.handleCommunity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/Jake.Squier/blockBots/frontend/src/pages/HomePage/HomePage.js"],"names":["React","Button","Typography","Grid","makeStyles","ThemeProvider","Header","NewProjectBtn","Index","LandArea","HomePage","Component","projectsURL","usersURL","state","loggedIn","user","id","username","projects","allProjects","indexPersonal","handlePersonal","setState","handleCommunity","renderUserProjects","userInfo","console","log","user_id","fetch","then","res","json","userProjects","forEach","project","push","createUser","e","preventDefault","method","headers","body","JSON","stringify","name","target","firstname","value","surname","password_digest","password","email","handleLogin","token","localStorage","handleNewProject","Accept","project_name","theme","html","css","javascript","componentDidMount","render","flexGrow","height","width","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Typography, Grid} from '@material-ui/core';\nimport { makeStyles, ThemeProvider} from '@material-ui/core/styles';\nimport Header from './components/header'\nimport NewProjectBtn from './components/newProjectBtn'\nimport Index from './components/index'\nimport LandArea from './components/landArea';\n\nclass HomePage extends React.Component {\n\n    projectsURL = 'http://localhost:3000/api/v1/projects'\n    usersURL = 'http://localhost:3000/api/v1/users'\n  \n    state = {\n        loggedIn: false,\n        user: {\n            id: 0,\n            username: '',\n            projects: []\n        },\n        allProjects: [],\n        indexPersonal: true\n        \n    }\n  \n      componentDidMount(){\n          fetch(this.projectsURL)\n              .then(res => res.json())\n              .then(projects => {\n                  console.log(projects)\n                  this.setState({allProjects: projects})})\n      }\n    handlePersonal = () => {\n        this.setState({indexPersonal: true})\n    }\n\n    handleCommunity = () => {\n        this.setState({indexPersonal: false})\n    }\n\n    renderUserProjects = (userInfo) => {\n        console.log(userInfo.user_id)\n        fetch(this.projectsURL)\n            .then(res => res.json)\n            .then(projects => {\n                let userProjects = []\n                projects.forEach(project=>{\n                    if(project.user_id == userInfo.user_id){\n                        userProjects.push(project)\n                    }\n                })\n                this.setState({user:{projects: userProjects}})\n            })\n    }\n\n    createUser = e => {\n        e.preventDefault()\n        console.log('hello')\n        fetch('http://localhost:3000/api/v1/users', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                name: e.target.firstname.value,\n                surname: e.target.surname.value,\n                username: e.target.username.value,\n                password_digest: e.target.password.value,\n                email: e.target.email.value\n            })\n        })\n        .then(res => res.json())\n        .then(console.log)\n    }\n\n    handleLogin = (e) => {\n        e.preventDefault()\n        console.log(e.target.username.value)\n        fetch(\"http://localhost:3000/api/v1/login\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                username: e.target.username.value,\n                password_digest: e.target.password.value\n            })\n        })\n        .then(res => res.json())\n        .then(userInfo => {\n            console.log(userInfo.token)\n            this.renderUserProjects(userInfo)\n            localStorage.token = userInfo.token\n        })\n    }\n\n\n    handleNewProject = (e) => {\n        e.preventDefault()\n        console.log('here')\n        fetch('http://localhost:3000/api/v1/projects', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\"\n            },\n            body: JSON.stringify({\n                user_id: 1,\n                project_name: 'pog',\n                theme: 'dark',\n                html: '',\n                css: '',\n                javascript: ''\n            })\n        })\n        .then(res => res.json())\n        .then(project => console.log(project))\n    }\n\n    render(){\n\n        return(\n\n        <div>\n            <Header state={this.state} createUser={this.createUser} handleLogin={this.handleLogin}/>\n            <Grid container style={{flexGrow: 1, height: \"1600px\", width: \"100%\"}}>\n                <Grid item container style={{backgroundColor: \"#262B3B\", height: \"46%\"}}>\n                    <LandArea state={this.state} handleNewProject={this.handleNewProject}/>\n                </Grid>\n                <Grid item container style={{backgroundColor: \"#262B3B\", height: \"54%\"}}>\n                    <Index state={this.state} handlePersonal={this.handlePersonal} handleCommunity={this.handleCommunity}/>\n                </Grid>\n            </Grid>\n        </div>\n    );\n  }\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}