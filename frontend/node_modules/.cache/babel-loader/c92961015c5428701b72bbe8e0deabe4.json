{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Jake.Squier/blockBots/frontend/src/HomePage/components/header.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Menu, MenuItem, IconButton, AppBar, Toolbar, Typography, Grid, Button, Dialog, DialogTitle, DialogContent, TextField, DialogActions, DialogContentText } from '@material-ui/core';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CheckIcon from '@material-ui/icons/Check';\nimport './forms.css';\nimport { Formik, Field, Form } from 'formik';\nimport { mixed, number, object, string } from 'yup';\nimport * as Yup from 'yup';\nimport { red } from '@material-ui/core/colors';\nimport { ContactlessOutlined } from '@material-ui/icons';\n\nconst Header = props => {\n  _s();\n\n  const [openLogin, setOpenLogin] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const [openLogoutPop, setLogoutPop] = React.useState(false);\n  const [loginUsername, setLoginUsername] = React.useState('');\n  const [loginPassword, setLoginPassword] = React.useState('');\n  const [signUsername, setSignUsername] = React.useState('');\n  const [signPassword, setSignPassword] = React.useState('');\n  const [signEmail, setSignEmail] = React.useState('');\n\n  const handleSignUsername = e => {\n    setSignUsername(e.target.value);\n  };\n\n  const handleSignPassword = e => {\n    setSignPassword(e.target.value);\n  };\n\n  const handleSignEmail = e => {\n    setSignEmail(e.target.value);\n  };\n\n  const handleLoginUsername = e => {\n    setLoginUsername(e.target.value);\n  };\n\n  const handleLoginPassword = e => {\n    setLoginPassword(e.target.value);\n  };\n\n  const handleMenu = event => {\n    if (props.state.user != null) {\n      setAnchorEl(event.currentTarget);\n    } else {\n      var circle = document.querySelector('.accountcircle');\n      console.log(circle); //circle.style.color = 'red';\n    }\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleClickOpenLogin = () => {\n    setOpenLogin(true);\n  };\n\n  const handleCloseLogin = () => {\n    setOpenLogin(false);\n  };\n\n  const [openSignUp, setOpenSignUp] = React.useState(false);\n\n  const handleClickOpenSignUp = () => {\n    setOpenSignUp(true);\n  };\n\n  const handleCloseSignUp = () => {\n    setOpenSignUp(false);\n  };\n\n  const navBar = makeStyles({\n    title: {\n      marginRight: \"1190px\"\n    },\n    loginButton: {\n      fontSize: \"14\",\n      fontFamily: \"IBM plex sans\",\n      marginRight: \"15px\",\n      variant: \"outlined\"\n    },\n    signUpButton: {\n      backgroundColor: \"#3485E4\",\n      marginRight: \"-10px\"\n    }\n  });\n  const classes = navBar();\n\n  const closePop = () => {\n    setLogoutPop(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      open: openLogoutPop,\n      onClose: closePop,\n      style: {\n        color: '#262B3B'\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        variant: \"h6\",\n        children: \"Are You Sure!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            width: '50%'\n          },\n          onClick: closePop,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            style: {\n              color: 'red'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 71\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            width: '50%'\n          },\n          onClick: () => {\n            props.handleLogout();\n            setLogoutPop(false);\n          },\n          children: /*#__PURE__*/_jsxDEV(CheckIcon, {\n            style: {\n              color: 'green'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      boxShadow: 3,\n      position: \"static\",\n      width: \"100%\",\n      style: {\n        margin: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"account of current user\",\n          \"aria-controls\": \"menu-appbar\",\n          \"aria-haspopup\": \"true\",\n          onClick: handleMenu,\n          color: \"inherit\",\n          children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {\n            className: \"accountcircle\",\n            style: {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          id: \"menu-appbar\",\n          anchorEl: anchorEl,\n          anchorOrigin: {\n            vertical: 'top',\n            horizontal: 'right'\n          },\n          keepMounted: true,\n          transformOrigin: {\n            vertical: 'top',\n            horizontal: 'right'\n          },\n          open: open,\n          onClose: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: handleClose,\n            children: \"My Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => {\n              handleClose();\n              setLogoutPop(true);\n            },\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.loginButton,\n          style: {\n            backgroundColor: \"#262B3B\",\n            color: \"#3485E4\"\n          },\n          boxShadow: 3,\n          onMouseEnter: event => {\n            event.target.style.backgroundColor = \"#3485E4\";\n            event.target.style.color = \"white\";\n          },\n          onMouseLeave: event => {\n            event.target.style.backgroundColor = \"#262B3B\";\n            event.target.style.color = \"#3485E4\";\n          },\n          onClick: handleClickOpenLogin,\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: openLogin,\n          onClose: handleCloseLogin,\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            id: \"login\",\n            style: {\n              marginLeft: '180px'\n            },\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n            children: /*#__PURE__*/_jsxDEV(Formik, {\n              validationSchema: object({}),\n              initialValues: {\n                username: '',\n                password: ''\n              },\n              onSubmit: values => {\n                console.log(props);\n                handleCloseLogin();\n              },\n              children: ({\n                values\n              }) => /*#__PURE__*/_jsxDEV(Form, {\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"username\",\n                  label: \"Username\",\n                  fullWidth: true,\n                  onChange: handleLoginUsername\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"password\",\n                  label: \"Password\",\n                  fullWidth: true,\n                  onChange: handleLoginPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  onClick: () => {\n                    props.handleLogin({\n                      username: loginUsername,\n                      password: loginPassword\n                    });\n                    handleCloseLogin();\n                  },\n                  fullWidth: true,\n                  style: {\n                    marginTop: '20px',\n                    backgroundColor: 'blue'\n                  },\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.signUpButton,\n          boxShadow: 3,\n          onClick: handleClickOpenSignUp,\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: openSignUp,\n          onClose: handleCloseSignUp,\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            id: \"signup\",\n            style: {\n              marginLeft: '243px'\n            },\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n            children: /*#__PURE__*/_jsxDEV(Formik, {\n              validationSchema: object({}),\n              initialValues: {\n                firstname: '',\n                surname: '',\n                email: '',\n                username: '',\n                password: ''\n              },\n              onSubmit: (event, values) => {\n                console.log(values);\n                handleCloseSignUp();\n                props.createUser();\n                fetch('http://localhost:3000/api/v1/users', {\n                  method: 'POST',\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  body: JSON.stringify({\n                    name: values.firstname,\n                    surname: values.surname,\n                    username: values.username,\n                    password: values.password,\n                    email: values.email\n                  })\n                }).then(res => res.json()).then(console.log);\n              },\n              children: ({\n                values\n              }) => /*#__PURE__*/_jsxDEV(Form, {\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"username\",\n                  label: \"Username\",\n                  fullWidth: true,\n                  onChange: handleSignUsername\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"email\",\n                  label: \"Email\",\n                  fullWidth: true,\n                  onChange: handleSignEmail\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"password\",\n                  label: \"Password\",\n                  type: \"password\",\n                  fullWidth: true,\n                  onChange: handleSignPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  onClick: () => {\n                    props.createUser({\n                      username: signUsername,\n                      password: signPassowrd\n                    });\n                    handleCloseSignUp();\n                  },\n                  fullWidth: true,\n                  style: {\n                    marginTop: '20px',\n                    backgroundColor: 'blue'\n                  },\n                  children: \"Sign Up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Header, \"gJ6kBbfzx1D/SREssyMeoeCGQqw=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/Jake.Squier/blockBots/frontend/src/HomePage/components/header.jsx"],"names":["React","Menu","MenuItem","IconButton","AppBar","Toolbar","Typography","Grid","Button","Dialog","DialogTitle","DialogContent","TextField","DialogActions","DialogContentText","makeStyles","ThemeProvider","AccountCircleIcon","CheckCircleIcon","CheckCircleOutlineIcon","CloseIcon","CheckIcon","Formik","Field","Form","mixed","number","object","string","Yup","red","ContactlessOutlined","Header","props","openLogin","setOpenLogin","useState","anchorEl","setAnchorEl","open","Boolean","openLogoutPop","setLogoutPop","loginUsername","setLoginUsername","loginPassword","setLoginPassword","signUsername","setSignUsername","signPassword","setSignPassword","signEmail","setSignEmail","handleSignUsername","e","target","value","handleSignPassword","handleSignEmail","handleLoginUsername","handleLoginPassword","handleMenu","event","state","user","currentTarget","circle","document","querySelector","console","log","handleClose","handleClickOpenLogin","handleCloseLogin","openSignUp","setOpenSignUp","handleClickOpenSignUp","handleCloseSignUp","navBar","title","marginRight","loginButton","fontSize","fontFamily","variant","signUpButton","backgroundColor","classes","closePop","color","width","handleLogout","margin","vertical","horizontal","style","marginLeft","username","password","values","handleLogin","marginTop","firstname","surname","email","createUser","fetch","method","headers","body","JSON","stringify","name","then","res","json","signPassowrd"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,QAAd,EAAwBC,UAAxB,EAAoCC,MAApC,EAA4CC,OAA5C,EAAqDC,UAArD,EAAiEC,IAAjE,EAAuEC,MAAvE,EAA+EC,MAA/E,EAAuFC,WAAvF,EAAoGC,aAApG,EAAmHC,SAAnH,EAA8HC,aAA9H,EAA6IC,iBAA7I,QAAqK,mBAArK;AACA,SAASC,UAAT,EAAqBC,aAArB,QAAyC,0BAAzC;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,sBAAP,MAAmC,uCAAnC;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAO,aAAP;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,QAApC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,MAAhC,QAA6C,KAA7C;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,SAASC,mBAAT,QAAoC,oBAApC;;AAGA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AAEtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BnC,KAAK,CAACoC,QAAN,CAAe,KAAf,CAAlC;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BtC,KAAK,CAACoC,QAAN,CAAe,IAAf,CAAhC;AACA,QAAMG,IAAI,GAAGC,OAAO,CAACH,QAAD,CAApB;AAEA,QAAM,CAACI,aAAD,EAAgBC,YAAhB,IAAgC1C,KAAK,CAACoC,QAAN,CAAe,KAAf,CAAtC;AAEA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoC5C,KAAK,CAACoC,QAAN,CAAe,EAAf,CAA1C;AAEA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoC9C,KAAK,CAACoC,QAAN,CAAe,EAAf,CAA1C;AAEA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkChD,KAAK,CAACoC,QAAN,CAAe,EAAf,CAAxC;AAEA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkClD,KAAK,CAACoC,QAAN,CAAe,EAAf,CAAxC;AAEA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BpD,KAAK,CAACoC,QAAN,CAAe,EAAf,CAAlC;;AAEA,QAAMiB,kBAAkB,GAAIC,CAAD,IAAO;AAC9BN,IAAAA,eAAe,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACH,GAFD;;AAIA,QAAMC,kBAAkB,GAAIH,CAAD,IAAO;AAC9BJ,IAAAA,eAAe,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACH,GAFD;;AAIA,QAAME,eAAe,GAAIJ,CAAD,IAAO;AAC3BF,IAAAA,YAAY,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACH,GAFD;;AAIA,QAAMG,mBAAmB,GAAIL,CAAD,IAAO;AAC/BV,IAAAA,gBAAgB,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AACH,GAFD;;AAIA,QAAMI,mBAAmB,GAAIN,CAAD,IAAO;AAC/BR,IAAAA,gBAAgB,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AACH,GAFD;;AAIA,QAAMK,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAG7B,KAAK,CAAC8B,KAAN,CAAYC,IAAZ,IAAoB,IAAvB,EAA4B;AACxB1B,MAAAA,WAAW,CAACwB,KAAK,CAACG,aAAP,CAAX;AACH,KAFD,MAEK;AACD,UAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,CAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ,EAFC,CAGD;AAEH;AACJ,GATD;;AAWA,QAAMK,WAAW,GAAG,MAAM;AACtBjC,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,QAAMkC,oBAAoB,GAAG,MAAM;AAC/BrC,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFD;;AAIE,QAAMsC,gBAAgB,GAAG,MAAM;AAC7BtC,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAFC;;AAIF,QAAM,CAACuC,UAAD,EAAaC,aAAb,IAA8B3E,KAAK,CAACoC,QAAN,CAAe,KAAf,CAApC;;AAEA,QAAMwC,qBAAqB,GAAG,MAAM;AAChCD,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAFD;;AAIA,QAAME,iBAAiB,GAAG,MAAM;AAC5BF,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAFD;;AAKA,QAAMG,MAAM,GAAG/D,UAAU,CAAC;AACtBgE,IAAAA,KAAK,EAAE;AACHC,MAAAA,WAAW,EAAE;AADV,KADe;AAItBC,IAAAA,WAAW,EAAE;AACTC,MAAAA,QAAQ,EAAE,IADD;AAETC,MAAAA,UAAU,EAAE,eAFH;AAGTH,MAAAA,WAAW,EAAE,MAHJ;AAITI,MAAAA,OAAO,EAAE;AAJA,KAJS;AAUtBC,IAAAA,YAAY,EAAE;AAEVC,MAAAA,eAAe,EAAE,SAFP;AAGVN,MAAAA,WAAW,EAAE;AAHH;AAVQ,GAAD,CAAzB;AAiBA,QAAMO,OAAO,GAAGT,MAAM,EAAtB;;AAEA,QAAMU,QAAQ,GAAG,MAAM;AACnB9C,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAED,aAAd;AAA6B,MAAA,OAAO,EAAE+C,QAAtC;AAAgD,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAvD;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,OAAO,EAAC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,aAAD;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAE;AAAR,WAAf;AAA+B,UAAA,OAAO,EAAEF,QAAxC;AAAA,iCAAkD,QAAC,SAAD;AAAW,YAAA,KAAK,EAAE;AAACC,cAAAA,KAAK,EAAE;AAAR;AAAlB;AAAA;AAAA;AAAA;AAAA;AAAlD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAE;AAAR,WAAf;AAA8B,UAAA,OAAO,EAAE,MAAI;AACvCzD,YAAAA,KAAK,CAAC0D,YAAN;AACAjD,YAAAA,YAAY,CAAC,KAAD,CAAZ;AACC,WAHL;AAAA,iCAGO,QAAC,SAAD;AAAW,YAAA,KAAK,EAAE;AAAC+C,cAAAA,KAAK,EAAE;AAAR;AAAlB;AAAA;AAAA;AAAA;AAAA;AAHP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAWA,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAE,CAAnB;AAAsB,MAAA,QAAQ,EAAC,QAA/B;AAAwC,MAAA,KAAK,EAAC,MAA9C;AAAqD,MAAA,KAAK,EAAE;AAAEG,QAAAA,MAAM,EAAE;AAAV,OAA5D;AAAA,6BACQ,QAAC,OAAD;AAAA,gCACQ,QAAC,UAAD;AACI,wBAAW,yBADf;AAEI,2BAAc,aAFlB;AAGI,2BAAc,MAHlB;AAII,UAAA,OAAO,EAAE/B,UAJb;AAKI,UAAA,KAAK,EAAC,SALV;AAAA,iCAOI,QAAC,iBAAD;AAAmB,YAAA,SAAS,EAAC,eAA7B;AAA6C,YAAA,KAAK,EAAE;AAApD;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,gBADR,eAUQ,QAAC,IAAD;AACI,UAAA,EAAE,EAAC,aADP;AAEI,UAAA,QAAQ,EAAExB,QAFd;AAGI,UAAA,YAAY,EAAE;AACdwD,YAAAA,QAAQ,EAAE,KADI;AAEdC,YAAAA,UAAU,EAAE;AAFE,WAHlB;AAOI,UAAA,WAAW,MAPf;AAQI,UAAA,eAAe,EAAE;AACjBD,YAAAA,QAAQ,EAAE,KADO;AAEjBC,YAAAA,UAAU,EAAE;AAFK,WARrB;AAYI,UAAA,IAAI,EAAEvD,IAZV;AAaI,UAAA,OAAO,EAAEgC,WAbb;AAAA,kCAeI,QAAC,QAAD;AAAU,YAAA,OAAO,EAAEA,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfJ,eAgBI,QAAC,QAAD;AAAU,YAAA,OAAO,EAAE,MAAI;AACnBA,cAAAA,WAAW;AACX7B,cAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,aAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVR,eA+BQ,QAAC,UAAD;AAAY,UAAA,SAAS,EAAE6C,OAAO,CAACR;AAA/B;AAAA;AAAA;AAAA;AAAA,gBA/BR,eAgCQ,QAAC,MAAD;AACI,UAAA,SAAS,EAAEQ,OAAO,CAACN,WADvB;AAEI,UAAA,KAAK,EAAE;AAACK,YAAAA,eAAe,EAAE,SAAlB;AAA6BG,YAAAA,KAAK,EAAE;AAApC,WAFX;AAGI,UAAA,SAAS,EAAE,CAHf;AAII,UAAA,YAAY,EAAE3B,KAAK,IAAE;AACjBA,YAAAA,KAAK,CAACP,MAAN,CAAawC,KAAb,CAAmBT,eAAnB,GAAqC,SAArC;AACAxB,YAAAA,KAAK,CAACP,MAAN,CAAawC,KAAb,CAAmBN,KAAnB,GAA2B,OAA3B;AACH,WAPL;AAQI,UAAA,YAAY,EAAE3B,KAAK,IAAE;AACjBA,YAAAA,KAAK,CAACP,MAAN,CAAawC,KAAb,CAAmBT,eAAnB,GAAqC,SAArC;AACAxB,YAAAA,KAAK,CAACP,MAAN,CAAawC,KAAb,CAAmBN,KAAnB,GAA2B,SAA3B;AACH,WAXL;AAYI,UAAA,OAAO,EAAEjB,oBAZb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhCR,eA8CY,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAEtC,SAAd;AAAyB,UAAA,OAAO,EAAEuC,gBAAlC;AAAA,kCACI,QAAC,WAAD;AAAa,YAAA,EAAE,EAAC,OAAhB;AAAwB,YAAA,KAAK,EAAE;AAACuB,cAAAA,UAAU,EAAE;AAAb,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,aAAD;AAAA,mCACI,QAAC,MAAD;AACA,cAAA,gBAAgB,EACZrE,MAAM,CAAC,EAAD,CAFV;AAMA,cAAA,aAAa,EAAE;AACXsE,gBAAAA,QAAQ,EAAE,EADC;AAEXC,gBAAAA,QAAQ,EAAE;AAFC,eANf;AAUA,cAAA,QAAQ,EAAGC,MAAD,IAAY;AAClB9B,gBAAAA,OAAO,CAACC,GAAR,CAAYrC,KAAZ;AACAwC,gBAAAA,gBAAgB;AACnB,eAbD;AAAA,wBAeC,CAAC;AAAC0B,gBAAAA;AAAD,eAAD,kBACG,QAAC,IAAD;AAAA,wCACI,QAAC,SAAD;AAAW,kBAAA,IAAI,EAAC,UAAhB;AAA2B,kBAAA,KAAK,EAAC,UAAjC;AAA4C,kBAAA,SAAS,MAArD;AAAsD,kBAAA,QAAQ,EAAExC;AAAhE;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,QAAC,SAAD;AAAW,kBAAA,IAAI,EAAC,UAAhB;AAA2B,kBAAA,KAAK,EAAC,UAAjC;AAA4C,kBAAA,SAAS,MAArD;AAAsD,kBAAA,QAAQ,EAAEC;AAAhE;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI,QAAC,MAAD;AAAQ,kBAAA,IAAI,EAAC,QAAb;AAAsB,kBAAA,OAAO,EAAE,MAAI;AAC/B3B,oBAAAA,KAAK,CAACmE,WAAN,CAAkB;AAACH,sBAAAA,QAAQ,EAAEtD,aAAX;AAA0BuD,sBAAAA,QAAQ,EAAErD;AAApC,qBAAlB;AACA4B,oBAAAA,gBAAgB;AACnB,mBAHD;AAGG,kBAAA,SAAS,MAHZ;AAGa,kBAAA,KAAK,EAAE;AAAC4B,oBAAAA,SAAS,EAAE,MAAZ;AAAoBf,oBAAAA,eAAe,EAAE;AAArC,mBAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9CZ,eAqGQ,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAEC,OAAO,CAACF,YAA3B;AAAyC,UAAA,SAAS,EAAE,CAApD;AAAuD,UAAA,OAAO,EAAET,qBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArGR,eAsGQ,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAEF,UAAd;AAA0B,UAAA,OAAO,EAAEG,iBAAnC;AAAA,kCACQ,QAAC,WAAD;AAAa,YAAA,EAAE,EAAC,QAAhB;AAAyB,YAAA,KAAK,EAAE;AAACmB,cAAAA,UAAU,EAAE;AAAb,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADR,eAEY,QAAC,aAAD;AAAA,mCAmCI,QAAC,MAAD;AACA,cAAA,gBAAgB,EACZrE,MAAM,CAAC,EAAD,CAFV;AAMA,cAAA,aAAa,EAAE;AACX2E,gBAAAA,SAAS,EAAE,EADA;AAEXC,gBAAAA,OAAO,EAAE,EAFE;AAGXC,gBAAAA,KAAK,EAAE,EAHI;AAIXP,gBAAAA,QAAQ,EAAE,EAJC;AAKXC,gBAAAA,QAAQ,EAAE;AALC,eANf;AAaA,cAAA,QAAQ,EAAE,CAACpC,KAAD,EAAQqC,MAAR,KAAiB;AACvB9B,gBAAAA,OAAO,CAACC,GAAR,CAAY6B,MAAZ;AACAtB,gBAAAA,iBAAiB;AACjB5C,gBAAAA,KAAK,CAACwE,UAAN;AACAC,gBAAAA,KAAK,CAAC,oCAAD,EAAuC;AACxCC,kBAAAA,MAAM,EAAE,MADgC;AAExCC,kBAAAA,OAAO,EAAE;AACL,oCAAgB;AADX,mBAF+B;AAKxCC,kBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,oBAAAA,IAAI,EAAEb,MAAM,CAACG,SADI;AAEjBC,oBAAAA,OAAO,EAAEJ,MAAM,CAACI,OAFC;AAGjBN,oBAAAA,QAAQ,EAAEE,MAAM,CAACF,QAHA;AAIjBC,oBAAAA,QAAQ,EAAEC,MAAM,CAACD,QAJA;AAKjBM,oBAAAA,KAAK,EAAEL,MAAM,CAACK;AALG,mBAAf;AALkC,iBAAvC,CAAL,CAaCS,IAbD,CAaMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAbb,EAcCF,IAdD,CAcM5C,OAAO,CAACC,GAdd;AAeH,eAhCD;AAAA,wBAiCK,CAAC;AAAC6B,gBAAAA;AAAD,eAAD,kBACG,QAAC,IAAD;AAAA,wCACI,QAAC,SAAD;AAAW,kBAAA,IAAI,EAAC,UAAhB;AAA2B,kBAAA,KAAK,EAAC,UAAjC;AAA4C,kBAAA,SAAS,MAArD;AAAsD,kBAAA,QAAQ,EAAE9C;AAAhE;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,QAAC,SAAD;AAAW,kBAAA,IAAI,EAAC,OAAhB;AAAwB,kBAAA,KAAK,EAAC,OAA9B;AAAsC,kBAAA,SAAS,MAA/C;AAAgD,kBAAA,QAAQ,EAAEK;AAA1D;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI,QAAC,SAAD;AAAW,kBAAA,IAAI,EAAC,UAAhB;AAA2B,kBAAA,KAAK,EAAC,UAAjC;AAA4C,kBAAA,IAAI,EAAC,UAAjD;AAA4D,kBAAA,SAAS,MAArE;AAAsE,kBAAA,QAAQ,EAAED;AAAhF;AAAA;AAAA;AAAA;AAAA,wBAHJ,eAII,QAAC,MAAD;AAAQ,kBAAA,IAAI,EAAC,QAAb;AAAsB,kBAAA,OAAO,EAAE,MAAI;AAC/BxB,oBAAAA,KAAK,CAACwE,UAAN,CAAiB;AAACR,sBAAAA,QAAQ,EAAElD,YAAX;AAAyBmD,sBAAAA,QAAQ,EAAEkB;AAAnC,qBAAjB;AACAvC,oBAAAA,iBAAiB;AACpB,mBAHD;AAGE,kBAAA,SAAS,MAHX;AAGY,kBAAA,KAAK,EAAE;AAACwB,oBAAAA,SAAS,EAAE,MAAZ;AAAoBf,oBAAAA,eAAe,EAAE;AAArC,mBAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAlCR;AAAA;AAAA;AAAA;AAAA;AAnCJ;AAAA;AAAA;AAAA;AAAA,kBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtGR;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YAXA;AAAA,kBADJ;AA2MH,CA3SD;;GAAMtD,M;;KAAAA,M;AA6SN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport {Menu, MenuItem, IconButton, AppBar, Toolbar, Typography, Grid, Button, Dialog, DialogTitle, DialogContent, TextField, DialogActions, DialogContentText} from '@material-ui/core';\nimport { makeStyles, ThemeProvider} from '@material-ui/core/styles';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CheckIcon from '@material-ui/icons/Check';\nimport './forms.css'\nimport { Formik, Field, Form } from 'formik';\nimport { mixed, number, object, string} from 'yup';\nimport * as Yup from 'yup';\nimport { red } from '@material-ui/core/colors';\nimport { ContactlessOutlined } from '@material-ui/icons';\n\n\nconst Header = (props) => {\n\n    const [openLogin, setOpenLogin] = React.useState(false);\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n\n    const [openLogoutPop, setLogoutPop] = React.useState(false);\n\n    const [loginUsername, setLoginUsername] = React.useState('')\n\n    const [loginPassword, setLoginPassword] = React.useState('')\n\n    const [signUsername, setSignUsername] = React.useState('')\n\n    const [signPassword, setSignPassword] = React.useState('')\n\n    const [signEmail, setSignEmail] = React.useState('')\n\n    const handleSignUsername = (e) => {\n        setSignUsername(e.target.value)\n    }\n\n    const handleSignPassword = (e) => {\n        setSignPassword(e.target.value)\n    }\n\n    const handleSignEmail = (e) => {\n        setSignEmail(e.target.value)\n    }\n\n    const handleLoginUsername = (e) => {\n        setLoginUsername(e.target.value)\n    }\n\n    const handleLoginPassword = (e) => {\n        setLoginPassword(e.target.value)\n    }\n    \n    const handleMenu = (event) => {\n        if(props.state.user != null){\n            setAnchorEl(event.currentTarget);\n        }else{\n            var circle = document.querySelector('.accountcircle')\n            console.log(circle)\n            //circle.style.color = 'red';\n        \n        }\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleClickOpenLogin = () => {\n        setOpenLogin(true);\n    };\n    \n      const handleCloseLogin = () => {\n        setOpenLogin(false);\n    };\n\n    const [openSignUp, setOpenSignUp] = React.useState(false);\n\n    const handleClickOpenSignUp = () => {\n        setOpenSignUp(true);\n    }\n\n    const handleCloseSignUp = () => {\n        setOpenSignUp(false);\n    }\n\n\n    const navBar = makeStyles({\n        title: {\n            marginRight: \"1190px\"\n        },\n        loginButton: {\n            fontSize: \"14\",\n            fontFamily: \"IBM plex sans\",\n            marginRight: \"15px\",\n            variant: \"outlined\"\n        },\n        signUpButton: {\n\n            backgroundColor: \"#3485E4\",\n            marginRight: \"-10px\"\n        }\n    });\n    \n    const classes = navBar();\n\n    const closePop = () => {\n        setLogoutPop(false)\n    }\n    \n    return(\n        <>\n            <Dialog open={openLogoutPop} onClose={closePop} style={{color: '#262B3B'}}>\n                <DialogTitle variant='h6'>Are You Sure!</DialogTitle>\n                <DialogActions>\n                    <Button style={{width: '50%'}} onClick={closePop}><CloseIcon style={{color: 'red'}}/></Button>\n                    <Button style={{width: '50%'}}onClick={()=>{\n                        props.handleLogout()\n                        setLogoutPop(false)\n                        }}><CheckIcon style={{color: 'green'}}/></Button>\n                </DialogActions>\n            </Dialog>\n        <AppBar boxShadow={3} position=\"static\" width=\"100%\" style={{ margin: 0 }}>\n                <Toolbar>\n                        <IconButton\n                            aria-label=\"account of current user\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            onClick={handleMenu}\n                            color=\"inherit\"\n                        >\n                            <AccountCircleIcon className='accountcircle' style={{}}/>\n                        </IconButton>\n                        <Menu\n                            id=\"menu-appbar\"\n                            anchorEl={anchorEl}\n                            anchorOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                            }}\n                            open={open}\n                            onClose={handleClose}\n                        >\n                            <MenuItem onClick={handleClose}>My Account</MenuItem>\n                            <MenuItem onClick={()=>{\n                                handleClose()\n                                setLogoutPop(true)\n                            }}>Logout</MenuItem>\n                        </Menu>\n                        <Typography className={classes.title}></Typography>\n                        <Button \n                            className={classes.loginButton} \n                            style={{backgroundColor: \"#262B3B\", color: \"#3485E4\"}}\n                            boxShadow={3} \n                            onMouseEnter={event=>{\n                                event.target.style.backgroundColor = \"#3485E4\" \n                                event.target.style.color = \"white\"\n                            }}\n                            onMouseLeave={event=>{\n                                event.target.style.backgroundColor = \"#262B3B\"\n                                event.target.style.color = \"#3485E4\"\n                            }}\n                            onClick={handleClickOpenLogin}\n                            >Log in</Button>\n                            <Dialog open={openLogin} onClose={handleCloseLogin}>\n                                <DialogTitle id=\"login\" style={{marginLeft: '180px'}}>Login</DialogTitle>\n                                <DialogContent>\n                                    <Formik\n                                    validationSchema={\n                                        object({\n                                            \n                                        })\n                                    }\n                                    initialValues={{\n                                        username: '',\n                                        password: ''\n                                    }}\n                                    onSubmit={(values) => {\n                                        console.log(props)\n                                        handleCloseLogin();\n                                    }}\n                                    >\n                                    {({values}) => (\n                                        <Form>\n                                            <TextField name='username' label='Username' fullWidth onChange={handleLoginUsername}/>\n                                            <TextField name='password' label='Password' fullWidth onChange={handleLoginPassword}/>\n                                            <Button type='submit' onClick={()=>{\n                                                props.handleLogin({username: loginUsername, password: loginPassword})\n                                                handleCloseLogin()\n                                            }} fullWidth style={{marginTop: '20px', backgroundColor: 'blue'}}>Login</Button>\n                                        </Form>\n                                    )}\n                                    </Formik>\n                                    {/* <div id='loginWrapper'>\n                                        <div className='login-form-container'>\n                                            <form onSubmit={(e) => {\n                                                props.handleLogin(e)\n                                                handleCloseLogin()\n                                            }}>\n                                                <div className='login-input-group'>\n                                                    <i className='fas fa-user'/>\n                                                    <input type=\"text\" name=\"username\"/>\n                                                    <span className='login-bar'/>\n                                                </div>\n                                                <div className='login-input-group'>\n                                                    <i className='fas fa-envelope'/>\n                                                    <input type=\"text\" name=\"password\"/>\n                                                    <span className='login-bar'/>\n                                                </div>\n                                                <div className='login-input-group'>\n                                                    <i className='fas fa-'/>\n                                                    <input type=\"submit\" value=\"Submit\"/>\n                                                    <span className='login-bar'/>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div> */}\n                                </DialogContent>\n                        </Dialog>\n                        <Button className={classes.signUpButton} boxShadow={3} onClick={handleClickOpenSignUp}>Sign up</Button>\n                        <Dialog open={openSignUp} onClose={handleCloseSignUp}>\n                                <DialogTitle id=\"signup\" style={{marginLeft: '243px'}}>Sign Up</DialogTitle>\n                                    <DialogContent>\n                                    {/* <div className='signupWrapper'>\n                                            <div className='signup-form-container'>\n                                                <form onSubmit={(e)=>{\n                                                    props.createUser(e)\n                                                    handleCloseSignUp()\n                                                }}>\n                                                    <div className=\"signup-input-group\">\n                                                        <i class=\"fas fa-user\"/>\n                                                        <input type=\"text\" name=\"username\" placeholder=\"Username...\"/>\n                                                        <span className='signup-bar'/>\n                                                    </div>\n                                                    <div className=\"signup-input-group\">\n                                                        <i class=\"fas fa-envelope\"/>\n                                                        <input type=\"text\" name=\"email\" placeholder=\"Email...\"/>\n                                                        <span className='signup-bar'/>\n                                                    </div>\n                                                    <div className=\"signup-input-group\">\n                                                        <i className=\"fas fa-lock\"/>\n                                                        <input type=\"text\" name=\"password\" placeholder=\"Password...\"/>\n                                                        <span className='signup-bar'/>\n                                                    </div>\n                                                    <div className=\"signup-input-group\">\n                                                        <i class=\"fas fa-lock\"/>\n                                                        <input type=\"password\" name=\"passwordConf\" placeholder=\"Confirm password...\"/>\n                                                        <span className='signup-bar'/>\n                                                    </div>\n                                                    <div className=\"signup-input-group\">\n                                                        <i class=\"fas fa-telegram-plane\"/>\n                                                        <input type=\"submit\" value=\"submit\"/>\n                                                        <span className='signup-bar'/>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                        </div> */}\n                                        <Formik \n                                        validationSchema={\n                                            object({\n                                                \n                                            })\n                                        }\n                                        initialValues={{\n                                            firstname: '',\n                                            surname: '',\n                                            email: '',\n                                            username: '',\n                                            password: ''\n                                        }}\n                                        onSubmit={(event, values)=>{\n                                            console.log(values)\n                                            handleCloseSignUp();\n                                            props.createUser()\n                                            fetch('http://localhost:3000/api/v1/users', {\n                                                method: 'POST',\n                                                headers: {\n                                                    \"Content-Type\": \"application/json\",\n                                                },\n                                                body: JSON.stringify({\n                                                    name: values.firstname,\n                                                    surname: values.surname,\n                                                    username: values.username,\n                                                    password: values.password,\n                                                    email: values.email\n                                                })\n                                            })\n                                            .then(res => res.json())\n                                            .then(console.log)\n                                        }}>\n                                            {({values}) => (\n                                                <Form>\n                                                    <TextField name='username' label='Username' fullWidth onChange={handleSignUsername}/>\n                                                    <TextField name='email' label='Email' fullWidth onChange={handleSignEmail}/>\n                                                    <TextField name='password' label='Password' type='password' fullWidth onChange={handleSignPassword}/>\n                                                    <Button type='submit' onClick={()=>{\n                                                        props.createUser({username: signUsername, password: signPassowrd, })\n                                                        handleCloseSignUp()\n                                                    }}fullWidth style={{marginTop: '20px', backgroundColor: 'blue'}}>Sign Up</Button>\n                                                </Form>\n                                            )}\n                                        </Formik>\n                                    </DialogContent>\n                        </Dialog>\n                </Toolbar>\n        </AppBar>\n        </>\n    );\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}