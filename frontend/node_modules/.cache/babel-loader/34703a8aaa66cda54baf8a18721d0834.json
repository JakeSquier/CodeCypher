{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Jake.Squier/blockBots/frontend/src/pages/ProjectPage/components/Editor.jsx\";\nimport React from 'react';\nimport { Button, Typography, Grid } from '@material-ui/core';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport { PinDropSharp } from '@material-ui/icons';\n\nconst Editor = props => {\n  const styles = makeStyles({\n    editor: {\n      width: '480px'\n    },\n    runBtn: {\n      backgroundColor: 'green'\n    }\n  });\n  const classes = styles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: classes.runBtn,\n      fullWidth: true,\n      onClick: () => {\n        props.onRun();\n      },\n      children: \"Run\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CodeMirror, {\n      onChange: (editor, data, value) => {\n        props.onEditorChange(value);\n      },\n      value: \"console.log(\\\"Hello World\\\")\",\n      options: {\n        lineWrapping: true,\n        lint: true,\n        mode: 'javascript',\n        theme: 'material',\n        lineNumbers: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), document.quer]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["/Users/Jake.Squier/blockBots/frontend/src/pages/ProjectPage/components/Editor.jsx"],"names":["React","Button","Typography","Grid","makeStyles","ThemeProvider","UnControlled","CodeMirror","PinDropSharp","Editor","props","styles","editor","width","runBtn","backgroundColor","classes","onRun","data","value","onEditorChange","lineWrapping","lint","mode","theme","lineNumbers","document","quer"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,IAA7B,QAAwC,mBAAxC;AACA,SAASC,UAAT,EAAqBC,aAArB,QAAyC,0BAAzC;AACA,SAAQC,YAAY,IAAIC,UAAxB,QAAyC,mBAAzC;AACA,OAAO,+BAAP;AACA,OAAO,+BAAP;AACA,SAASC,YAAT,QAA6B,oBAA7B;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAEpB,QAAMC,MAAM,GAAGP,UAAU,CAAC;AACtBQ,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE;AADH,KADc;AAItBC,IAAAA,MAAM,EAAE;AACJC,MAAAA,eAAe,EAAE;AADb;AAJc,GAAD,CAAzB;AASA,QAAMC,OAAO,GAAGL,MAAM,EAAtB;AAEA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAEK,OAAO,CAACF,MAA3B;AAAmC,MAAA,SAAS,MAA5C;AAA6C,MAAA,OAAO,EAAE,MAAI;AAACJ,QAAAA,KAAK,CAACO,KAAN;AAAc,OAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AACI,MAAA,QAAQ,EAAE,CAACL,MAAD,EAASM,IAAT,EAAeC,KAAf,KAAyB;AAC/BT,QAAAA,KAAK,CAACU,cAAN,CAAqBD,KAArB;AACH,OAHL;AAII,MAAA,KAAK,EAAC,8BAJV;AAKI,MAAA,OAAO,EAAE;AACLE,QAAAA,YAAY,EAAE,IADT;AAELC,QAAAA,IAAI,EAAE,IAFD;AAGLC,QAAAA,IAAI,EAAE,YAHD;AAILC,QAAAA,KAAK,EAAE,UAJF;AAKLC,QAAAA,WAAW,EAAE;AALR;AALb;AAAA;AAAA;AAAA;AAAA,YAFJ,EAeKC,QAAQ,CAACC,IAfd;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAhCD;;KAAMlB,M;AAkCN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport { Button, Typography, Grid} from '@material-ui/core';\nimport { makeStyles, ThemeProvider} from '@material-ui/core/styles';\nimport {UnControlled as CodeMirror} from 'react-codemirror2'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport { PinDropSharp } from '@material-ui/icons';\n\nconst Editor = props => {\n\n    const styles = makeStyles({\n        editor: {\n            width: '480px'\n        },\n        runBtn: {\n            backgroundColor: 'green'\n        }\n    })\n\n    const classes = styles();\n\n    return(\n        <div>\n            <Button className={classes.runBtn} fullWidth onClick={()=>{props.onRun()}}>Run</Button>\n            <CodeMirror\n                onChange={(editor, data, value) => {\n                    props.onEditorChange(value)\n                }}                 \n                value='console.log(\"Hello World\")'\n                options={{\n                    lineWrapping: true,\n                    lint: true,\n                    mode: 'javascript',\n                    theme: 'material',\n                    lineNumbers: true\n                }}\n            />\n            {document.quer}\n        </div>\n    );\n}\n\nexport default Editor;"]},"metadata":{},"sourceType":"module"}