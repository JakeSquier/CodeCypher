{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Jake.Squier/blockBots/frontend/src/pages/HomePage/HomePage.js\";\nimport React from 'react';\nimport { Button, Typography, Grid } from '@material-ui/core';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport Header from './components/header';\nimport NewProjectBtn from './components/newProjectBtn';\nimport Index from './components/index';\nimport LandArea from './components/landArea';\n\nclass HomePage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.projectsURL = 'http://localhost:3000/api/v1/projects/';\n    this.usersURL = 'http://localhost:3000/api/v1/users/';\n    this.state = {\n      loggedIn: false,\n      user: {\n        id: 0,\n        username: '',\n        projects: []\n      },\n      allProjects: [],\n      indexPersonal: true\n    };\n\n    this.handlePersonal = () => {\n      this.setState({\n        indexPersonal: true\n      });\n    };\n\n    this.handleCommunity = () => {\n      this.setState({\n        indexPersonal: false\n      });\n    };\n\n    this.renderProjects = () => {\n      console.log('hellp');\n    };\n\n    this.renderUserProjects = userInfo => {// console.log(userInfo.user_id)\n      // var userProjects = []\n      // this.state.allProjects.forEach(project => {\n      //     if(project.user_id == userInfo.id){\n      //         userProjects.push(project)\n      //     }\n      // })\n      // console.log(userProjects)\n    };\n\n    this.createUser = e => {\n      e.preventDefault();\n      console.log('hello');\n      console.log(e.target.username.value);\n      fetch('http://localhost:3000/api/v1/users', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: e.target.username.value,\n          password: e.target.password.value,\n          email: e.target.email.value\n        })\n      }).then(res => res.json()).then(console.log);\n    };\n\n    this.handleLogin = e => {\n      e.preventDefault();\n      console.log(e.target.username.value, e.target.password.value);\n      fetch(\"http://localhost:3000/api/v1/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: e.target.username.value,\n          password: e.target.password.value\n        })\n      }).then(res => res.json()).then(userInfo => {\n        console.log(userInfo);\n        this.renderUserProjects(userInfo);\n        this.setState({\n          user: {\n            id: userInfo.user_id\n          }\n        });\n        this.setState({\n          loggedIn: true\n        });\n        localStorage.token = userInfo.token;\n      });\n    };\n\n    this.handleNewProject = e => {\n      e.preventDefault();\n      console.log('here');\n      fetch('http://localhost:3000/api/v1/projects', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: this.state.user.id,\n          project_name: 'pog',\n          theme: 'dark',\n          html: '',\n          css: '',\n          javascript: ''\n        })\n      }).then(res => res.json()).then(project => {\n        var id = project.id;\n        console.log(project);\n        this.props.history.push(`projects/` + `${id}`);\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(this.projectsURL).then(res => res.json()).then(projects => {\n      //setTimeout(this.setState({allProjects: projects}), 3000)\n      this.setState({\n        allProjects: projects\n      }); //console.log(this.state.allProjects)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        state: this.state,\n        createUser: this.createUser,\n        handleLogin: this.handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          flexGrow: 1,\n          height: \"1600px\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          style: {\n            backgroundColor: \"#262B3B\",\n            height: \"46%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(LandArea, {\n            state: this.state,\n            handleNewProject: this.handleNewProject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          style: {\n            backgroundColor: \"#262B3B\",\n            height: \"54%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Index, {\n            projects: this.state.allProjects,\n            handlePersonal: this.handlePersonal,\n            handleCommunity: this.handleCommunity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/Jake.Squier/blockBots/frontend/src/pages/HomePage/HomePage.js"],"names":["React","Button","Typography","Grid","makeStyles","ThemeProvider","Header","NewProjectBtn","Index","LandArea","HomePage","Component","projectsURL","usersURL","state","loggedIn","user","id","username","projects","allProjects","indexPersonal","handlePersonal","setState","handleCommunity","renderProjects","console","log","renderUserProjects","userInfo","createUser","e","preventDefault","target","value","fetch","method","headers","body","JSON","stringify","password","email","then","res","json","handleLogin","user_id","localStorage","token","handleNewProject","Accept","project_name","theme","html","css","javascript","project","props","history","push","componentDidMount","render","flexGrow","height","width","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Typography, Grid} from '@material-ui/core';\nimport { makeStyles, ThemeProvider} from '@material-ui/core/styles';\nimport Header from './components/header'\nimport NewProjectBtn from './components/newProjectBtn'\nimport Index from './components/index'\nimport LandArea from './components/landArea';\n\nclass HomePage extends React.Component {\n\n    projectsURL = 'http://localhost:3000/api/v1/projects/'\n    usersURL = 'http://localhost:3000/api/v1/users/'\n  \n    state = {\n        loggedIn: false,\n        user: {\n            id: 0,\n            username: '',\n            projects: []\n        },\n        allProjects: [],\n        indexPersonal: true\n        \n    }\n  \n    componentDidMount(){\n        fetch(this.projectsURL)\n            .then(res => res.json())\n            .then(projects => {\n                //setTimeout(this.setState({allProjects: projects}), 3000)\n                this.setState({allProjects: projects})\n                //console.log(this.state.allProjects)\n            })\n      }\n    handlePersonal = () => {\n        this.setState({indexPersonal: true})\n    }\n\n    handleCommunity = () => {\n        this.setState({indexPersonal: false})\n    }\n\n    renderProjects = () => {\n        console.log('hellp')\n    }\n\n    renderUserProjects = (userInfo) => {\n        // console.log(userInfo.user_id)\n        // var userProjects = []\n        // this.state.allProjects.forEach(project => {\n        //     if(project.user_id == userInfo.id){\n        //         userProjects.push(project)\n        //     }\n        // })\n        // console.log(userProjects)\n    }\n\n    createUser = e => {\n        e.preventDefault()\n        console.log('hello')\n        console.log(e.target.username.value)\n        fetch('http://localhost:3000/api/v1/users', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                username: e.target.username.value,\n                password: e.target.password.value,\n                email: e.target.email.value\n            })\n        })\n        .then(res => res.json())\n        .then(console.log)\n    }\n\n    handleLogin = (e) => {\n        e.preventDefault()\n        console.log(e.target.username.value, e.target.password.value)\n        fetch(\"http://localhost:3000/api/v1/login\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                username: e.target.username.value,\n                password: e.target.password.value\n            })\n        })\n        .then(res => res.json())\n        .then(userInfo => {\n            console.log(userInfo)\n            this.renderUserProjects(userInfo)\n            this.setState({user: {id: userInfo.user_id}})\n            this.setState({loggedIn: true})\n            localStorage.token = userInfo.token\n\n        })\n    }\n\n\n    handleNewProject = (e) => {\n        e.preventDefault()\n        console.log('here')\n        fetch('http://localhost:3000/api/v1/projects', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\"\n            },\n            body: JSON.stringify({\n                user_id: this.state.user.id,\n                project_name: 'pog',\n                theme: 'dark',\n                html: '',\n                css: '',\n                javascript: ''\n            })\n        })\n        .then(res => res.json())\n        .then(project => {\n            var id = project.id\n            console.log(project)\n            this.props.history.push(`projects/` + `${id}`)\n        })\n    }\n\n    render(){\n\n        return(\n\n        <div>\n            <Header state={this.state} createUser={this.createUser} handleLogin={this.handleLogin}/>\n            <Grid container style={{flexGrow: 1, height: \"1600px\", width: \"100%\"}}>\n                <Grid item container style={{backgroundColor: \"#262B3B\", height: \"46%\"}}>\n                    <LandArea state={this.state} handleNewProject={this.handleNewProject}/>\n                </Grid>\n                <Grid item container style={{backgroundColor: \"#262B3B\", height: \"54%\"}}>\n                    <Index projects={this.state.allProjects} handlePersonal={this.handlePersonal} handleCommunity={this.handleCommunity}/>\n                </Grid>\n            </Grid>\n        </div>\n    );\n  }\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}